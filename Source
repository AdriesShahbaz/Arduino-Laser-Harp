#include "Pitches.h" //Use the pitches file

int speaker = 7;
int yellow=8;
int black=9;
int orange=10;
int brown=11;
int laser = 12;
int limit = 13;
int sensor = A0;
int x = 0;
int delayLaser = 5;
int delayMotor = 3;

void setup() {
  pinMode(yellow,OUTPUT);
  pinMode(black,OUTPUT);
  pinMode(orange,OUTPUT);
  pinMode(brown,OUTPUT);
  pinMode(laser, OUTPUT);
  pinMode(sensor, INPUT);
  pinMode(speaker, OUTPUT);
  while (limit == LOW) {
      digitalWrite(yellow, HIGH);
      delay(100);
      digitalWrite(yellow, LOW);
      if (limit == HIGH) {
        break;
      }  
      digitalWrite(black, HIGH);
      delay(100);
      digitalWrite(black, LOW);
      if (limit == HIGH) {
        break;
      }  
      digitalWrite(orange, HIGH);
      delay(100);
      digitalWrite(orange, LOW);
      if (limit == HIGH) {
        break;
      }  
      digitalWrite(brown, HIGH);
      delay(100);
      digitalWrite(brown, LOW);
      delay(100);
  }
}

void loop() {
  forward();
  backword();
}

void forward() {
  for (int i = 0; i < 2; i++) {
    digitalWrite(laser, HIGH);
    delay(5);
    check();
    digitalWrite(laser, LOW);
    digitalWrite(brown,HIGH);
    delay(3);
    digitalWrite(laser, HIGH);
    delay(5);
    digitalWrite(laser, LOW);
    digitalWrite(brown,LOW);
    digitalWrite(orange,HIGH);
    delay(3);
    digitalWrite(laser, HIGH);
    delay(5);
    check();
    digitalWrite(laser, LOW);
    digitalWrite(orange,LOW);
    digitalWrite(black,HIGH);
    delay(3);
    digitalWrite(laser, HIGH);
    delay(5);
    check();
    digitalWrite(laser, LOW);
    digitalWrite(black,LOW);
    digitalWrite(yellow,HIGH);
    delay(3);
    digitalWrite(laser, HIGH);
    delay(5);
    check();
    digitalWrite(laser, LOW);
    digitalWrite(yellow,LOW);
    delay(3);
  }

}

void backword() {
    for (int i = 0; i > 2; i++) {
      digitalWrite(laser, HIGH);
      delay(5);
      check();
      digitalWrite(laser, LOW);
      digitalWrite(yellow,HIGH);
      delay(3);
      digitalWrite(laser, HIGH);
      delay(5);
      digitalWrite(laser, LOW);
      digitalWrite(yellow, LOW);
      digitalWrite(black, HIGH);
      delay(3);
      digitalWrite(laser, HIGH);
      delay(5);
      check();
      digitalWrite(laser, LOW);
      digitalWrite(black,LOW);
      digitalWrite(orange,HIGH);
      delay(3);
      digitalWrite(laser, HIGH);
      delay(5);
      check();
      digitalWrite(laser, LOW);
      digitalWrite(orange,LOW);
      digitalWrite(brown,HIGH);
      delay(3);
      digitalWrite(laser, HIGH);
      delay(5);
      check();
      digitalWrite(laser, LOW);
      digitalWrite(brown, LOW);
      delay(3);
    }
}


void backwordCheck() {
      digitalWrite(yellow, HIGH);
      delay(100);
      digitalWrite(yellow, LOW);
      digitalWrite(black, HIGH);
      delay(100);
      digitalWrite(black, LOW);
      digitalWrite(orange, HIGH);
      delay(100);
      digitalWrite(orange, LOW);
      digitalWrite(brown, HIGH);
      delay(100);
      digitalWrite(brown, LOW);
      delay(100);
}

void check() {
//  while (sensor <= 100) {
//    if (x == 0) {
//      tone(speaker, NOTE_C6);
//    }
//    else if (x == 1) {
//      tone(speaker, NOTE_D6);
//    }
//    else if (x == 2) {
//      tone(speaker, NOTE_E6);
//    }
//    else if (X == 3) {
//      tone (speaker, NOTE_F6)
//    }
//    else if (x == 4) {
//      tone (speaker, NOTE_G6);
//    }
//    else if (x == 5) {
//      tone (speaker, NOTE_A7);
//    }
//    else if (x == 6) {
//      tone (speaker, NOTE_B7);
//    }
//    else if (x == 7) {
//      tone (speaker, NOTE_C7);
//    }
//    else if (x == 8) {
//      tone (speaker, NOTE_D7);
//    }
//  }
//  noTone(speaker);
}
